package guiJUnitTests;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import gui.Parser;
import gui.UpdateFilesFrame;

public class InsertDataInFilesTests {

	private List<Object> expectedResultPacients = new ArrayList<Object>();
	
	private static UpdateFilesFrame updateframe = new UpdateFilesFrame();
	
	private Parser parser = new Parser();
	
	@Before
	public void setup() 
	{
		expectedResultPacients.add(Arrays.toString(new Object[] {"Alexandru","sinuzita","AB","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Alexandru","infectie_ureche","AB","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","tuse_sange","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","oboseala","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","pierdere_greutate","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","pierdere_apetit","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","febra","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Catalin","transpiratie_abundenta","O","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Daniela","durere_spate","AB","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Daniela","urina_sange","AB","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Daniela","dureri_stomac","AB","negativ"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Ioana","tuse","A","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Ioana","febra","A","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Ioana","frisoane","A","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Ioana","respiratie_greoaie","A","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Marius","otita","B","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Marius","sinuzita","B","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Marius","bronsita","B","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Marius","anafilaxie_severa","B","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Adrian","bilirubina_crescuta","O","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Adrian","icter","O","pozitiv"}));
		expectedResultPacients.add(Arrays.toString(new Object[] {"Adrian","litiaza_biliara","O","pozitiv"}));
	}
	
	@SuppressWarnings("static-access")
	@Test
	public void insertPacientTest()
	{
		List<Object> simp = new ArrayList<Object>();
		simp.add("febra");
		simp.add("durere_cap");
		simp.add("frisoane");
		simp.add("gat_umflat");
		simp.add("nas_infundat");
		simp.add("tuse");
		
		List<Object> expectedResult = expectedResultPacients;
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","febra","O","pozitiv"}));
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","durere_cap","O","pozitiv"}));
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","frisoane","O","pozitiv"}));
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","gat_umflat","O","pozitiv"}));
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","nas_infundat","O","pozitiv"}));
		expectedResult.add(Arrays.toString(new Object[] {"Eduard","tuse","O","pozitiv"}));
		
		for(int i=0; i<simp.size(); i++)
		{
			updateframe.newSymptomField.setText((String) simp.get(i));
			updateframe.btnAddSymptom.doClick();
		}
		updateframe.pacientNameField.setText("Eduard");
		updateframe.isDonor.setSelectedItem("da");
		updateframe.needBloodTransfusions.setSelectedItem("nu");
		updateframe.bloodGroup.setSelectedItem("O");
		updateframe.rhType.setSelectedItem("pozitiv");
		
		updateframe.btnNewPacient.doClick();
		parser.btnDisplayPacientsList.doClick();
		List<Object> test = new ArrayList<Object>();
		for(int i=0; i<parser.table.getModel().getRowCount(); i++)
		{
			test.add(Arrays.toString(new Object[] {parser.table.getModel().getValueAt(i, 0),
												   parser.table.getModel().getValueAt(i, 1),
					                               parser.table.getModel().getValueAt(i, 2),
					                               parser.table.getModel().getValueAt(i, 3)}));
		}
		
		Assert.assertEquals(expectedResult, test);
		
		parser.chooser.setSelectedFile(new File(new File(System.getProperty("user.dir")).
				getParent()+"\\sistem_expert.xml"));
		parser.btnBrowseXML.doClick();
		
		parser.chooser.setSelectedFile(new File(new File(System.getProperty("user.dir")).getParent()+"\\sistem_expert.json"));
		parser.btnBrowseJSON.doClick();
		
	}
}
